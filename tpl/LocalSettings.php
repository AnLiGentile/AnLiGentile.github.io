<?php
# This file was automatically generated by the MediaWiki installer.
# If you make manual changes, please keep track in case you need to
# recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.

# If you customize your file layout, set $IP to the directory that contains
# the other MediaWiki files. It will be used as a base to locate files.
if( defined( 'MW_INSTALL_PATH' ) ) {
	$IP = MW_INSTALL_PATH;
} else {
	$IP = dirname( __FILE__ );
}

$path = array( $IP, "$IP/includes", "$IP/languages" );
set_include_path( implode( PATH_SEPARATOR, $path ) . PATH_SEPARATOR . get_include_path() );

require_once( "$IP/includes/DefaultSettings.php" );

# If PHP's memory limit is very low, some operations may fail.
ini_set( 'memory_limit', '20M' );

if ( $wgCommandLineMode ) {
	if ( isset( $_SERVER ) && array_key_exists( 'REQUEST_METHOD', $_SERVER ) ) {
		die( "This script must be run from the command line\n" );
	}
}
## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

$wgSitename         = "Odp";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
$wgScriptPath       = "/wiki";
$wgScriptExtension  = ".php";

$wgArticlePath      = "${wgScriptPath}/$1";

## For more information on customizing the URLs please see:
## http://www.mediawiki.org/wiki/Manual:Short_URL

$wgEnableEmail      = true;
$wgEnableUserEmail  = true;

$wgEmergencyContact = "odp-admin@cnr.it";
$wgPasswordSender = "odp-admin@cnr.it";

## For a detailed description of the following switches see
## http://www.mediawiki.org/wiki/Extension:Email_notification 
## and http://www.mediawiki.org/wiki/Extension:Email_notification
## There are many more options for fine tuning available see
## /includes/DefaultSettings.php
## UPO means: this is also a user preference option
$wgEnotifUserTalk = true; # UPO
$wgEnotifWatchlist = true; # UPO
$wgEmailAuthentication = true;

$wgDBtype           = "mysql";
$wgDBserver         = "localhost";
$wgDBname           = "odp";
$wgDBuser           = "odp_USER";
$wgDBpassword       = "Pattlogy08";

# MySQL specific settings
$wgDBprefix         = "";

# MySQL table options to use during installation or update
$wgDBTableOptions   = "TYPE=InnoDB";

# Experimental charset support for MySQL 4.1/5.0.
$wgDBmysql5 = true; // This must be true!!!

# Postgres specific settings
$wgDBport           = "5432";
$wgDBmwschema       = "mediawiki";
$wgDBts2schema      = "public";

## Shared memory settings
$wgMainCacheType = CACHE_NONE;
$wgMemCachedServers = array();

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads       = true;
$wgUseImageMagick = true;
$wgImageMagickConvertCommand = "convert"; // 	not windows!

## If you want to use image uploads under safe mode,
## create the directories images/archive, images/thumb and
## images/temp, and make them all writable. Then uncomment
## this, if it's not already uncommented:
# $wgHashedUploadDirectory = false;

## If you have the appropriate support software installed
## you can enable inline LaTeX equations:
$wgUseTeX           = false;

$wgLocalInterwiki   = $wgSitename;

$wgLanguageCode = "en";

$wgProxyKey = "ed171b390f1f2dd43ff170b022d7939344ffcf8ecf9484735b54f8edad21acdc";

## Default skin: you can change the default skin. Use the internal symbolic
## names, ie 'standard', 'nostalgia', 'cologneblue', 'monobook':
$wgDefaultSkin = 'monobook';

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
# $wgEnableCreativeCommonsRdf = true;
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "";
$wgRightsText = "";
$wgRightsIcon = "";
# $wgRightsCode = ""; # Not yet used

$wgDiff3 = "/usr/bin/diff3";

# When you make changes to this configuration file, this will make
# sure that cached pages are cleared.
$configdate = gmdate( 'YmdHis', @filemtime( __FILE__ ) );
$wgCacheEpoch = max( $wgCacheEpoch, $configdate );

#**** BEGIN SETTINGS FOR ODP ****

# *** This solves a BUG in PHP 5.0.4 in editing __sections__*** #
$wgParserConf['preprocessorClass'] = 'Preprocessor_Hash';

// DISABLE CACHING 
$wgEnableParserCache = false;
$wgCachePages = false;

# SHOW PHP WARNINGS
$wgShowExceptionDetails = false; // DEVELOPMENT!

$wgLogo = $wgScriptPath . "/images/LawsonKlein.png";
$wgLogo = $wgScriptPath . "/images/ODP_Logo_LEGO_Bricks_155.png";
$sfgNamespaceIndex=200;
$smwgOWLFullExport=false;
# INCLUDE EXTENSION SEMANTIC MEDIA WIKI
include_once('extensions/SemanticMediaWiki/includes/SMW_Settings.php');
enableSemantics('localhost');
$smwgNamespace="http://www.ontologydesignpatterns.org/odp-portal/";

# INCLUDE EXTENSION SEMANTIC RESULT FORMATS
include_once('extensions/SemanticResultFormats/SRF_Settings.php');
srfInit( array('graph', 'timeline', 'calendar') );
$sfgNamespaceIndex=200;
# INCLUDE EXTENSION SEMANTIC FORMS
include_once('extensions/SemanticForms/includes/SF_Settings.php');

# INCLUDE EXTENSION SEMANTIC FORMS ADDONS 
include_once('extensions/SemanticFormsAddons/SFA_Settings.php');

# INCLUDE EXTENSION EVALUATION WORKFLOW
global $ewgPropertyReviewAbout;
$ewgPropertyReviewAbout = 'ReviewAboutSubmission';
$ewgReviewsNS=400;
require_once("extensions/EvaluationWikiflow/includes/EW_Settings.php");

# INCLUDE EXTENSION ODP PORTAL 
include_once('extensions/OdpPortal/includes/ODP_Settings.php');

# INCLUDE EXTENSION WOP
include_once('extensions/WOP/Settings.php');

# INCLUDE EXTENSION ODP IMPORT PROPOSAL
require_once("extensions/OdpImportProposal/OIP_Init.php");

# INCLUDE EXTENSION HEADER TABS
require_once("extensions/HeaderTabs/HeaderTabs.php");

## other ##
# INCLUDE EXTENSION PARSER FUNCTIONS
require_once("extensions/ParserFunctions/ParserFunctions.php");

# INCLUDE EXTENSION RENAME USER 
require_once( "extensions/Renameuser/SpecialRenameuser.php" );

# INCLUDE EXTENSION IMAGE MAP 
require_once( "extensions/ImageMap/ImageMap.php" );

# INCLUDE EXTENSION VARIABLES
require_once("extensions/Variables/Variables.php" );

# INCLUDE EXTENSION CUSTOM VARIABLES
require_once("extensions/CustomVariables/CustomVariables.php" );

# INCLUDE EXTENSION CONFIRM EDIT 
require_once("extensions/ConfirmEdit/ConfirmEdit.php" ); 

# INCLUDE EXTENSION CONFIRM ACCOUNT 
require_once("extensions/ConfirmAccount/SpecialConfirmAccount.php"); 

# INCLUDE EXTENSION ISLOGGED 
require_once("extensions/IsLogged/IsLogged.php");

# INCLUDE EXTENSION STRING FUNCTIONS	 
require_once("extensions/StringFunctions/StringFunctions.php");  # this extension adds a space char to the output [FIXME]

# INCLUDE EXTENSION URL GET PARAMETERS	 
require_once("extensions/UrlGetParameters/UrlGetParameters.php"); 

# INCLUDE EXTENSION RIGHT FUNCTIONS 
require_once("extensions/RightFunctions/RightFunctions.php"); 

# INCLUDE EXTENSION REPLACE TEXT 
require_once("extensions/ReplaceText/ReplaceText.php"); 

# INCLUDE EXTENSION EMAIL ARTICLE 
require_once("extensions/EmailArticle/EmailArticle.php"); 

# INCLUDE EXTENSION SIMPLE FORMS 
require_once("extensions/SimpleForms/SimpleForms.php"); # this extension adds three tab chars to the output [FIXED]

# INCLUDE EXTENSION CLICK COUNTER
require_once("extensions/ClickCounter/includes/CC_Setup.php"); 

#include extension user functions
require_once("extensions/UserFunctions/UserFunctions.php");

$wgFileExtensions[] = 'png';
$wgFileExtensions[] = 'svg';
$wgFileExtensions[] = 'pdf';
$wgFileExtensions[] = 'odt';
$wgFileExtensions[] = 'odp';
$wgFileExtensions[] = 'doc';
$wgFileExtensions[] = 'ppt';
$wgFileExtensions[] = 'txt';
$wgFileExtensions[] = 'jape';

//$wgDebugLogFile = '/var/www/html/www.ontologydesignpatterns.org/www/wiki/logs/odp.log';

#include extension STSGMassMailer
require_once( "$IP/extensions/SpecialMassEmail.setup.php" );

#include extension autowatch
$wgMultiWatchUserIDs = array(2,3);
require_once("$IP/extensions/AutoWatch.php");

# Hide IP address for anonym user
$wgShowIPinHeader=false;

# skip skins
$wgSkipSkins = array("chick", "cologneblue", "myskin", "nostalgia","modern", "standard","stlab3");

# **** END SETTINGS FOR ODP ****
$wgPasswordReminderResendTime=0;
ini_set( 'display_errors', 'Off' );
ini_set( 'memory_limit', '64M' );
#ini_set( 'output_buffering','4096');
$wgShowSQLErrors=true;
/**/
